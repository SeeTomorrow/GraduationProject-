<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dz.bestnew.mapper.UserCommentMapper">
  <resultMap id="BaseResultMap" type="com.dz.bestnew.po.UserComment">
    <id column="newstitle_id" jdbcType="INTEGER" property="newstitleId" />
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="comment_time" jdbcType="TIME" property="commentTime" />
    <result column="report" jdbcType="BIT" property="report" />
    <result column="context" jdbcType="VARCHAR" property="context" />
    <result column="bad" jdbcType="INTEGER" property="bad" />
    <result column="praise" jdbcType="INTEGER" property="praise" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    newstitle_id, user_id, comment_time, report, context, bad, praise
  </sql>
  <select id="selectByExample" parameterType="com.dz.bestnew.po.UserCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.dz.bestnew.po.UserCommentKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_comment
    where newstitle_id = #{newstitleId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.dz.bestnew.po.UserCommentKey">
    delete from user_comment
    where newstitle_id = #{newstitleId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dz.bestnew.po.UserCommentExample">
    delete from user_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dz.bestnew.po.UserComment">
    insert into user_comment (newstitle_id, user_id, comment_time, 
      report, context, bad, praise
      )
    values (#{newstitleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{commentTime,jdbcType=TIME}, 
      #{report,jdbcType=BIT}, #{context,jdbcType=VARCHAR}, #{bad,jdbcType=INTEGER}, #{praise,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dz.bestnew.po.UserComment">
    insert into user_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="newstitleId != null">
        newstitle_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
      <if test="report != null">
        report,
      </if>
      <if test="context != null">
        context,
      </if>
      <if test="bad != null">
        bad,
      </if>
      <if test="praise != null">
        praise,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="newstitleId != null">
        #{newstitleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIME},
      </if>
      <if test="report != null">
        #{report,jdbcType=BIT},
      </if>
      <if test="context != null">
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="bad != null">
        #{bad,jdbcType=INTEGER},
      </if>
      <if test="praise != null">
        #{praise,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dz.bestnew.po.UserCommentExample" resultType="java.lang.Long">
    select count(*) from user_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_comment
    <set>
      <if test="record.newstitleId != null">
        newstitle_id = #{record.newstitleId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.commentTime != null">
        comment_time = #{record.commentTime,jdbcType=TIME},
      </if>
      <if test="record.report != null">
        report = #{record.report,jdbcType=BIT},
      </if>
      <if test="record.context != null">
        context = #{record.context,jdbcType=VARCHAR},
      </if>
      <if test="record.bad != null">
        bad = #{record.bad,jdbcType=INTEGER},
      </if>
      <if test="record.praise != null">
        praise = #{record.praise,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_comment
    set newstitle_id = #{record.newstitleId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      comment_time = #{record.commentTime,jdbcType=TIME},
      report = #{record.report,jdbcType=BIT},
      context = #{record.context,jdbcType=VARCHAR},
      bad = #{record.bad,jdbcType=INTEGER},
      praise = #{record.praise,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dz.bestnew.po.UserComment">
    update user_comment
    <set>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIME},
      </if>
      <if test="report != null">
        report = #{report,jdbcType=BIT},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="bad != null">
        bad = #{bad,jdbcType=INTEGER},
      </if>
      <if test="praise != null">
        praise = #{praise,jdbcType=INTEGER},
      </if>
    </set>
    where newstitle_id = #{newstitleId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dz.bestnew.po.UserComment">
    update user_comment
    set comment_time = #{commentTime,jdbcType=TIME},
      report = #{report,jdbcType=BIT},
      context = #{context,jdbcType=VARCHAR},
      bad = #{bad,jdbcType=INTEGER},
      praise = #{praise,jdbcType=INTEGER}
    where newstitle_id = #{newstitleId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>